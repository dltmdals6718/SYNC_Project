*&---------------------------------------------------------------------*
*& Include          MZFCFI0010I01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100 INPUT.

  CASE OK_CODE.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN 'CREATE'.
      PERFORM CREATE_DOCUMENT.
    WHEN 'EDIT'.
      PERFORM EDIT_DOCUMENT.
    WHEN 'DELETE'.
      PERFORM DELETE_DOCUMENT.
    WHEN 'SEARCH'.
      PERFORM SEARCH_HEADER_DATA.
    WHEN 'RESET'.
      PERFORM RESET_SEARCH_HEADER_CONDITION.
    WHEN 'BKSTAT'.
      PERFORM SELECT_BKSTAT.
  ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE EXIT INPUT.
  CASE OK_CODE.
    WHEN 'CANCEL'.
      LEAVE TO SCREEN 0.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0200 INPUT.
  CASE OK_CODE.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN 'SAVE'.
      PERFORM SAVE_DOCUMENT.
    WHEN 'ITEM_CREATE'.
      PERFORM ITEM_CREATE.
    WHEN 'RESET'.
      PERFORM RESET_CREATE_DOCUMENT.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0110  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0110 INPUT.
  CASE OK_CODE.
    WHEN 'REJECT_OK'.
      PERFORM REJECT_HEADER_OKAY.
    WHEN 'CANCEL'.
      LEAVE TO SCREEN 0.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0300  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0300 INPUT.
  CASE OK_CODE.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN 'SAVE'.
      PERFORM UPDATE_DOCUMENT.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Form EDIT_DOCUMENT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EDIT_DOCUMENT .

  DATA: LT_ROWS TYPE LVC_T_ROID,
        LS_ROW  LIKE LINE OF LT_ROWS.

  CALL METHOD GO_HEADER_ALV_GRID->GET_SELECTED_ROWS
    IMPORTING
      ET_ROW_NO = LT_ROWS.

  IF LT_ROWS IS INITIAL OR LINES( LT_ROWS ) > 1.
    MESSAGE S102(ZFC_DUMPTRUCK) WITH '1' DISPLAY LIKE 'W'.
  ELSE.

    READ TABLE LT_ROWS INTO LS_ROW INDEX 1.
    READ TABLE GT_HEADER_DATA INTO GS_HEADER_DATA INDEX LS_ROW-ROW_ID.

    IF GS_HEADER_DATA-BKSTAT <> 0 OR GS_HEADER_DATA-BLART <> 'SA'.
      MESSAGE S111(ZFC_DUMPTRUCK) DISPLAY LIKE 'W'.
    ELSE.
      MOVE-CORRESPONDING GS_HEADER_DATA TO ZTFC_FIT020.

      SELECT *
        FROM ZTFC_FIT030
        INTO CORRESPONDING FIELDS OF TABLE GT_ITEM_UPDATE_DATA
        WHERE BELNR = GS_HEADER_DATA-BELNR.

      SORT GT_ITEM_UPDATE_DATA BY BUZEI.
      CLEAR ZSFC_FI_0010.
      ZSFC_FI_0010-WAERS = 'KRW'.
      LOOP AT GT_ITEM_UPDATE_DATA INTO GS_ITEM_UPDATE_DATA.
        CASE GS_ITEM_UPDATE_DATA-SHKZG.
          WHEN 'S'.
            ADD GS_ITEM_UPDATE_DATA-WRBTR TO ZSFC_FI_0010-DEBIT.
            GS_ITEM_UPDATE_DATA-DEBIT = GS_ITEM_UPDATE_DATA-WRBTR.
          WHEN 'H'.
            ADD GS_ITEM_UPDATE_DATA-WRBTR TO ZSFC_FI_0010-CREDIT.
            GS_ITEM_UPDATE_DATA-CREDIT = GS_ITEM_UPDATE_DATA-WRBTR.
        ENDCASE.

* 입력된 계정과목코드로 계정과목명 조회
        SELECT SINGLE GLTXT
          FROM ZTFC_FIT010
          INTO GS_ITEM_UPDATE_DATA-GLTXT
          WHERE SKANR = GS_ITEM_UPDATE_DATA-SKANR.

        MODIFY TABLE GT_ITEM_UPDATE_DATA FROM GS_ITEM_UPDATE_DATA.
      ENDLOOP.


      CALL SCREEN 300.
    ENDIF.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_DOCUMENT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_DOCUMENT .

  DATA: LV_EMPLOYEE TYPE ZTFC_SDT040.

  CLEAR ZSFC_FI_0010.
  CLEAR GT_ITEM_CREATE_DATA.
  CLEAR GT_ITEM_DATA.
  CLEAR GT_HEADER_DATA.
  CLEAR ZTFC_FIT020.
  CLEAR ZSFC_FI_0020.

* 생성자 사원 정보 조회
  SELECT SINGLE *
    FROM ZTFC_SDT040
    INTO LV_EMPLOYEE
    WHERE ID = SY-UNAME.

  ZTFC_FIT020-BLART = 'SA'.
  ZTFC_FIT020-ERDAT = SY-DATUM.
  ZTFC_FIT020-ERZET = SY-UZEIT.
  ZTFC_FIT020-ERNAME = LV_EMPLOYEE-PERNAME.
  ZTFC_FIT020-PERNR = LV_EMPLOYEE-PERNR.

  CALL SCREEN 200.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form UPDATE_DOCUMENT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM UPDATE_DOCUMENT .

  DATA: LV_VALID  TYPE C,
        LV_ANSWER TYPE C LENGTH 1.

  DATA: LV_EMPLOYEE TYPE ZTFC_SDT040.


* 미래의 증빙일자 불가능
  IF ZTFC_FIT020-BLDAT > SY-DATUM.
    MESSAGE S134(ZFC_DUMPTRUCK) DISPLAY LIKE 'W'.
    RETURN.
  ENDIF.

* 수정자 사원 정보 조회
  SELECT SINGLE *
    FROM ZTFC_SDT040
    INTO LV_EMPLOYEE
    WHERE ID = SY-UNAME.

* ALV에 변경된 데이터 유효성 검사
  GO_ITEM_UPDATE_ALV_GRID->CHECK_CHANGED_DATA(
    IMPORTING
      E_VALID   = LV_VALID
  ).

  IF LV_VALID <> 'X'.
    MESSAGE S115(ZFC_DUMPTRUCK) DISPLAY LIKE 'W'.
    RETURN.
  ENDIF.

* 차대변 금액 누적 합계 및 갱신
  CLEAR ZSFC_FI_0010-CREDIT.
  CLEAR ZSFC_FI_0010-DEBIT.
  LOOP AT GT_ITEM_UPDATE_DATA INTO GS_ITEM_UPDATE_DATA.
    CASE GS_ITEM_UPDATE_DATA-SHKZG.
      WHEN 'S'.
        GS_ITEM_UPDATE_DATA-WRBTR = GS_ITEM_UPDATE_DATA-DEBIT.
        ADD GS_ITEM_UPDATE_DATA-WRBTR TO ZSFC_FI_0010-DEBIT.
      WHEN 'H'.
        GS_ITEM_UPDATE_DATA-WRBTR = GS_ITEM_UPDATE_DATA-CREDIT.
        ADD GS_ITEM_UPDATE_DATA-WRBTR TO ZSFC_FI_0010-CREDIT.
    ENDCASE.
    MODIFY TABLE GT_ITEM_UPDATE_DATA FROM GS_ITEM_UPDATE_DATA.
  ENDLOOP.
  ZSFC_FI_0010-DIFFERENCE = ABS( ZSFC_FI_0010-DEBIT - ZSFC_FI_0010-CREDIT ).

* 차대변 금액 비교
  IF ZSFC_FI_0010-DEBIT = ZSFC_FI_0010-CREDIT.

    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
        TITLEBAR              = '전표 수정'
*       DIAGNOSE_OBJECT       = ' '
        TEXT_QUESTION         = '전표를 수정하시겠습니까?'
        TEXT_BUTTON_1         = '예'
*       ICON_BUTTON_1         = ' '
        TEXT_BUTTON_2         = '아니요'
*       ICON_BUTTON_2         = ' '
        DISPLAY_CANCEL_BUTTON = ''
      IMPORTING
        ANSWER                = LV_ANSWER
      EXCEPTIONS
        TEXT_NOT_FOUND        = 1
        OTHERS                = 2.
    IF SY-SUBRC <> 0.
* Implement suitable error handling here
    ENDIF.

    IF LV_ANSWER = '2'.
      RETURN.
    ENDIF.

* 증빙일자, 적요, 변경자 및 변경 정보 UPDATE
    UPDATE ZTFC_FIT020
      SET BLDAT = ZTFC_FIT020-BLDAT
          BKTXT = ZTFC_FIT020-BKTXT
          AENAME = SY-UNAME
          AEDAT = SY-DATUM
          AEZET = SY-UZEIT
      WHERE BELNR = ZTFC_FIT020-BELNR.

    IF SY-SUBRC <> 0.
      MESSAGE S113(ZFC_DUMPTRUCK) DISPLAY LIKE 'E'.
      ROLLBACK WORK.
      RETURN.
    ENDIF.

* 변경된 증빙일자, 적요 OUTTAB에 갱신
    GS_HEADER_DATA-BLDAT = ZTFC_FIT020-BLDAT.
    GS_HEADER_DATA-BKTXT = ZTFC_FIT020-BKTXT.
    MODIFY TABLE GT_HEADER_DATA FROM GS_HEADER_DATA TRANSPORTING BLDAT BKTXT.

* 변경된 차 대변 금액 DB 반영
    LOOP AT GT_ITEM_UPDATE_DATA INTO GS_ITEM_UPDATE_DATA.
      UPDATE ZTFC_FIT030
        SET WRBTR = GS_ITEM_UPDATE_DATA-WRBTR
            SGTXT = GS_ITEM_UPDATE_DATA-SGTXT
        WHERE BELNR = GS_HEADER_DATA-BELNR
          AND BUZEI = GS_ITEM_UPDATE_DATA-BUZEI.

      IF SY-SUBRC <> 0.
        MESSAGE S113(ZFC_DUMPTRUCK) DISPLAY LIKE 'E'.
        ROLLBACK WORK.
        RETURN.
      ENDIF.
    ENDLOOP.

* 전표 아이템에 변경 사항 반영을 위해 clear
    CLEAR GT_ITEM_DATA.
    IF SY-SUBRC = 0.
      MESSAGE S112(ZFC_DUMPTRUCK).
    ELSE.
      MESSAGE S113(ZFC_DUMPTRUCK) DISPLAY LIKE 'W'.
      ROLLBACK WORK.
    ENDIF.
    LEAVE TO SCREEN 0.
  ELSE.
    MESSAGE S105(ZFC_DUMPTRUCK) DISPLAY LIKE 'W'.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0120  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0120 INPUT.

  CASE OK_CODE.
    WHEN 'OKAY'.
      LEAVE TO SCREEN 0.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0130  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0130 INPUT.
  CASE OK_CODE.
    WHEN 'OKAY'.
      LEAVE TO SCREEN 0.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Form DELETE_DOCUMENT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM DELETE_DOCUMENT .

  DATA: LT_ROWS TYPE LVC_T_ROID,
        LS_ROW  LIKE LINE OF LT_ROWS.

  DATA: LV_ANSWER TYPE C LENGTH 1.

  DATA: LT_DOCUMENT_ITEM TYPE TABLE OF ZTFC_FIT030,
        LS_DOCUMENT_ITEM LIKE LINE OF LT_DOCUMENT_ITEM.

  CALL METHOD GO_HEADER_ALV_GRID->GET_SELECTED_ROWS
    IMPORTING
      ET_ROW_NO = LT_ROWS.

  IF LINES( LT_ROWS ) = 1.



    READ TABLE LT_ROWS INTO LS_ROW INDEX 1.
    READ TABLE GT_HEADER_DATA INTO GS_HEADER_DATA INDEX LS_ROW-ROW_ID.

    IF GS_HEADER_DATA-BLART = 'SA' AND GS_HEADER_DATA-BKSTAT = 0.

      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          TITLEBAR              = '전표 삭제'
*         DIAGNOSE_OBJECT       = ' '
          TEXT_QUESTION         = `전표 번호가 ` && GS_HEADER_DATA-BELNR && `인 전표를 삭제하시겠습니까?`
          TEXT_BUTTON_1         = '예'
*         ICON_BUTTON_1         = ' '
          TEXT_BUTTON_2         = '아니요'
*         ICON_BUTTON_2         = ' '
          DISPLAY_CANCEL_BUTTON = ''
        IMPORTING
          ANSWER                = LV_ANSWER
        EXCEPTIONS
          TEXT_NOT_FOUND        = 1
          OTHERS                = 2.
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.

      IF LV_ANSWER = '2'.
        RETURN.
      ENDIF.

*     전표 아이템 삭제
      DELETE FROM ZTFC_FIT030
        WHERE BELNR = GS_HEADER_DATA-BELNR.

      IF SY-SUBRC <> 0.
        MESSAGE S120(ZFC_DUMPTRUCK) DISPLAY LIKE 'E'.
        ROLLBACK WORK.
        RETURN.
      ENDIF.

*     전표 헤더 삭제
      DELETE FROM ZTFC_FIT020
        WHERE BELNR = GS_HEADER_DATA-BELNR.

      IF SY-SUBRC <> 0.
        MESSAGE S120(ZFC_DUMPTRUCK) DISPLAY LIKE 'E'.
        ROLLBACK WORK.
        RETURN.
      ENDIF.

      IF SY-SUBRC = 0.
        DELETE GT_HEADER_DATA INDEX LS_ROW-ROW_ID.
        PERFORM SETTING_HEADER_STATUS_DATA.
        CLEAR GT_ITEM_DATA.
        MESSAGE S119(ZFC_DUMPTRUCK).
      ELSE.
        MESSAGE S120(ZFC_DUMPTRUCK) DISPLAY LIKE 'E'.
        ROLLBACK WORK.
      ENDIF.

    ELSE.
      MESSAGE S118(ZFC_DUMPTRUCK) DISPLAY LIKE 'W'.
    ENDIF.

  ELSE.
    MESSAGE S102(ZFC_DUMPTRUCK) WITH 1 DISPLAY LIKE 'W'.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0140  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0140 INPUT.
  CASE OK_CODE.
    WHEN 'OKAY'.
      LEAVE TO SCREEN 0.
  ENDCASE.
ENDMODULE.
