FUNCTION Z_FCFI_SETTLEMENT.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(IV_YEAR) TYPE  ZEFC_GJAHR
*"  EXCEPTIONS
*"      EXIST_SETTLEMENT
*"      ERROR_DATABASE
*"----------------------------------------------------------------------

  DATA: LT_SETTLEMENT TYPE TABLE OF ZTFC_FIT040, " 올해 누계액
        LS_SETTLEMENT LIKE LINE OF LT_SETTLEMENT.

  DATA: LT_PASTSET TYPE TABLE OF ZTFC_FIT040, " 작년 누계액
        LS_PASTSET LIKE LINE OF LT_PASTSET.

  DATA: LT_DOCUMENT TYPE TABLE OF ZVFCFI0010D, " 전표 헤더 + 아이템
        LS_DOCUMENT LIKE LINE OF LT_DOCUMENT.

  DATA: LT_ACCOUNTSUBJECT TYPE TABLE OF ZTFC_FIT010,
        LS_ACCOUNTSUBJECT LIKE LINE OF LT_ACCOUNTSUBJECT.

  DATA: LV_YYYY     TYPE N LENGTH 4, " 현재 연도
        LV_PASTYYYY TYPE N LENGTH 4, " 작년 연도
        LV_MM       TYPE N LENGTH 2, " 월
        LV_YYYYMM   TYPE CHAR10. " 연도 월

  DATA: LV_TEMP_BALANCE    TYPE ZTFC_FIT040-BALANCE, " 금액 Work Area
        LS_TEMP_SETTLEMENT LIKE LINE OF LT_SETTLEMENT.

  LV_YYYY = IV_YEAR.
  LV_PASTYYYY = LV_YYYY - 1.

  SELECT COUNT( * ) " 해당 연도 이미 결산했는지 검증
    FROM ZTFC_FIT040
    WHERE GJAHR = IV_YEAR.

  IF SY-SUBRC = 0.
    RAISE EXIST_SETTLEMENT.
  ENDIF.

* 계정과목코드
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE LT_ACCOUNTSUBJECT
    FROM ZTFC_FIT010
    WHERE LVORM = 0. " 삭제 플래그

* 작년 0월 모든 계정과목의 13월 차기이월 ROW
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE LT_PASTSET
    FROM ZTFC_FIT040
    WHERE MON = '13'
      AND GJAHR = LV_PASTYYYY.

* 0월
  LOOP AT LT_PASTSET INTO LS_PASTSET.
    CLEAR LS_SETTLEMENT.
    LS_SETTLEMENT-GJAHR = LV_YYYY.
    LS_SETTLEMENT-SKANR = LS_PASTSET-SKANR.
    LS_SETTLEMENT-MON = '00'.
    LS_SETTLEMENT-CARRYFORWARD = LS_PASTSET-CARRYOVER.
    LS_SETTLEMENT-WAERS = 'KRW'.
    APPEND LS_SETTLEMENT TO LT_SETTLEMENT.
  ENDLOOP.


  LOOP AT LT_ACCOUNTSUBJECT INTO LS_ACCOUNTSUBJECT.

* 1월 ~ 12월
    DO 12 TIMES.

      CLEAR LS_SETTLEMENT.
      LV_MM = SY-INDEX.
      LS_SETTLEMENT-MON = LV_MM.
      LS_SETTLEMENT-GJAHR = LV_YYYY.
      LS_SETTLEMENT-SKANR = LS_ACCOUNTSUBJECT-SKANR.
      LS_SETTLEMENT-WAERS = 'KRW'.

      CONCATENATE LV_YYYY LV_MM '%' INTO LV_YYYYMM.

*   차변 금액
      SELECT SUM( WRBTR )
        INTO LS_SETTLEMENT-DEBIT
        FROM ZVFCFI0010D
        WHERE SKANR = LS_SETTLEMENT-SKANR
          AND SHKZG = 'S'
          AND WAERS = 'KRW'
          AND BUDAT LIKE LV_YYYYMM.

*   대변
      SELECT SUM( WRBTR )
        INTO LS_SETTLEMENT-CREDIT
        FROM ZVFCFI0010D
        WHERE SKANR = LS_SETTLEMENT-SKANR
          AND SHKZG = 'H'
          AND WAERS = 'KRW'
          AND BUDAT LIKE LV_YYYYMM.

*   잔액 계산
      CASE LS_ACCOUNTSUBJECT-GLACCNR.
        WHEN '1'. " 차변 - 대변
          LS_SETTLEMENT-BALANCE = LS_SETTLEMENT-DEBIT - LS_SETTLEMENT-CREDIT.
        WHEN '2' OR '3'. " 대변 - 차변
          LS_SETTLEMENT-BALANCE = LS_SETTLEMENT-CREDIT - LS_SETTLEMENT-DEBIT.
      ENDCASE.

      CLEAR LS_TEMP_SETTLEMENT.
      IF SY-INDEX = 1.
        " 0월 이월 금액 더하기 필요
        READ TABLE LT_SETTLEMENT
          INTO LS_TEMP_SETTLEMENT
          WITH KEY SKANR = LS_ACCOUNTSUBJECT-SKANR MON = '00'.
        ADD LS_TEMP_SETTLEMENT-CARRYFORWARD TO LS_SETTLEMENT-BALANCE.
      ELSE.
        " 이전 월의 잔액 더하기 필요
        READ TABLE LT_SETTLEMENT
          INTO LS_TEMP_SETTLEMENT
          WITH KEY SKANR = LS_ACCOUNTSUBJECT-SKANR MON = SY-INDEX - 1.
        ADD LS_TEMP_SETTLEMENT-BALANCE TO LS_SETTLEMENT-BALANCE.
      ENDIF.
      APPEND LS_SETTLEMENT TO LT_SETTLEMENT.
    ENDDO.

  ENDLOOP.

* 13월
  LOOP AT LT_SETTLEMENT INTO LS_SETTLEMENT WHERE MON = 12.
    CLEAR LS_TEMP_SETTLEMENT.
    LS_TEMP_SETTLEMENT-GJAHR = LS_SETTLEMENT-GJAHR.
    LS_TEMP_SETTLEMENT-SKANR = LS_SETTLEMENT-SKANR.
    LS_TEMP_SETTLEMENT-MON = 13.
    LS_TEMP_SETTLEMENT-CARRYOVER = LS_SETTLEMENT-BALANCE.
    LS_TEMP_SETTLEMENT-WAERS = 'KRW'.
    APPEND LS_TEMP_SETTLEMENT TO LT_SETTLEMENT.
  ENDLOOP.

  SORT LT_SETTLEMENT BY GJAHR SKANR MON.

* 실제 누계액 DB 테이블에 INSERT하기 - 주석처리해둠.
*  LOOP AT LT_SETTLEMENT INTO LS_SETTLEMENT.
*    INSERT ZTFC_FIT040 FROM LS_SETTLEMENT.
*    IF SY-SUBRC <> 0.
*      ROLLBACK WORK.
*      RAISE ERROR_DATABASE.
*    ENDIF.
*  ENDLOOP.
ENDFUNCTION.
